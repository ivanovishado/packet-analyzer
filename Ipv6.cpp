#include "Ipv6.h"

const char* ipv6_numbers[] = {
	"IPv6 Hop-by-Hop Option (HOPOPT)",
	"Internet Control Message	(ICMP)",
	"Internet Group Management (IGMP)",
	"Gateway-to-Gateway (GGP)",
	"IPv4 encapsulation	(IPv4)",
	"Stream (ST)",
	"Transmission Control (TCP)",
	"CBT",
	"Exterior Gateway Protocol (EGP)",
	"any private interior gateway (used by Cisco for their IGRP) (IGP)",
	"BBN RCC Monitoring	(BBN-RCC-MON)",
	"Network Voice Protocol	(NVP-II)",
	"PUP",
	"ARGUS",
	"EMCON",
	"Cross Net Debugger	(XNET)",
	"Chaos (CHAOS)",
	"User Datagram Protocol (UDP)",
	"Multiplexing",
	"DCN",
	"TAC Monitoring",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"any local network",
	"SATNET and Backroom EXPAK",
	"MIT Subnet Support",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"SATNET Monitoring",
	"Unassigned",
	"Internet Packet Core Utility",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Backroom SATNET Monitoring",
	"Unassigned"
	"WIDEBAND Monitoring",
	"WIDEBAND EXPAK",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Unassigned",
	"Reserved"
};

Ipv6::Ipv6(const unsigned char* paquete){
  memcpy(version_traffic_flowLabel, &(paquete[14]), 4);
  memcpy(&payloadLength, &(paquete[18]), 2);
  payloadLength = ntohs(payloadLength);
  nextHeader = paquete[20];
  hopLimit = paquete[21];
  memcpy(sourceAddress, &(paquete[22]), 16);
  inet_ntop(AF_INET6, sourceAddress, sourceAddress, INET6_ADDRSTRLEN);
  memcpy(destinationAddress, &(paquete[38]), 16);
  inet_ntop(AF_INET6, destinationAddress, destinationAddress, INET6_ADDRSTRLEN);
}

void Ipv6::imprime(){
  unsigned char temp, temp2;
  temp = version_traffic_flowLabel[0] >> 4;
  printf("Version:\t\t%d\n", temp);
  temp = version_traffic_flowLabel[0] << 4;
  temp2 = version_traffic_flowLabel[1] >> 4;
  printf("Traffic Class:\t\t0x%02X%02X\n", temp, temp2);
  temp = version_traffic_flowLabel[1] << 4;
  temp = temp + version_traffic_flowLabel[2] + version_traffic_flowLabel[3];
  printf("Flow Label:\t\t%d\n", temp);
  printf("Payload length:\t\t%u\n", payloadLength);
  printf("Next Header:\t\t%d (%s)\n", nextHeader, ipv6_numbers[nextHeader]);
  printf("Hop Limit:\t\t%d\n", hopLimit);
  printf("Source Address:\t\t%s\n", sourceAddress);
  printf("Destination Address:\t%s\n", destinationAddress);
}
